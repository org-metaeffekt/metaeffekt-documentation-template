pipeline {
    agent any
    tools {
        maven 'maven-3.9.6'
        jdk 'ZULU8'
    }
    stages {
        stage('Build with mirror-database profile') {
            steps {
                withCredentials([string(credentialsId: 'metaeffekt-nvd-apikey', variable: 'NVD_APIKEY')]) {
                    withMaven(maven: 'maven-3.9.6', mavenOpts: '-Xmx8g') {
                        sh 'mvn -B clean install -Pmirror-database -Dnvd.apikey=$NVD_APIKEY'
                    }
                }
            }
        }

        stage('Build with index-database profile') {
            steps {
                withCredentials([string(credentialsId: 'metaeffekt-nvd-apikey', variable: 'NVD_APIKEY')]) {
                    withMaven(maven: 'maven-3.9.6', mavenOpts: '-Xmx8g') {
                        sh 'mvn -B clean install -Pindex-database -Dnvd.apikey=$NVD_APIKEY'
                    }
                }
            }
        }

        stage('Push index-database artifacts to server') {
            steps {
                sh '''
                upload_files() {
                    for file in "$1"/*; do
                        if [ -d "$file" ]; then
                            # Create directory on the server
                            relative_path=${file#.database/ae-vulnerability-mirror/index/}
                            # Recursively call the function for the new directory
                            upload_files "$file"
                        else
                            # Upload the file
                            relative_path=${file#.database/ae-vulnerability-mirror/index/}
                            curl --create-dirs -T "$file" "http://ae-scanner/upload/mirror/index/$relative_path"
                        fi
                    done
                }

                upload_files ".database/ae-vulnerability-mirror/index"
                '''
            }
        }
    }
}
