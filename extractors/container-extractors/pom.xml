<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.metaeffekt.example.documentation</groupId>
        <artifactId>ae-extractors</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>ae-container-extractors</artifactId>
    <packaging>pom</packaging>

    <properties>
        <!-- use there properties to explicitly define image repo and tag to use -->
        <image.registry></image.registry>
        <image.repo></image.repo>
        <image.tag></image.tag>

        <image.qualifier>${image.repo}-${image.tag}</image.qualifier>
        <image.id>${image.registry}/${image.repo}:${image.tag}</image.id>

        <ae.extractor.resources.dir>${project.build.directory}/extractor/resources</ae.extractor.resources.dir>
        <ae.extractor.scan.dir>${project.build.directory}/extractor/scan</ae.extractor.scan.dir>
        <ae.extractor.target.dir>${project.build.directory}/classes/inventory</ae.extractor.target.dir>

    </properties>

    <modules>
        <module>ae-container-extractor</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                    <executions>
                        <execution>
                            <id>run-image-inspect</id>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>inspect</argument>
                                    <argument>${image.id}</argument>
                                </arguments>
                                <outputFile>${ae.extractor.resources.dir}/${image.qualifier}.json</outputFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>run-image-save</id>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>save</argument>
                                    <argument>${image.id}</argument>
                                    <argument>-o</argument>
                                    <argument>${ae.extractor.resources.dir}/${image.qualifier}.tar</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.metaeffekt.core</groupId>
                    <artifactId>ae-inventory-maven-plugin</artifactId>
                    <version>${ae.core.version}</version>
                    <executions>
                        <execution>
                            <id>image-scan</id>
                            <goals>
                                <goal>create-directory-report</goal>
                            </goals>
                            <phase>process-resources</phase>
                            <configuration>
                                <inputDirectory>${ae.extractor.resources.dir}</inputDirectory>
                                <scanDirectory>${ae.extractor.scan.dir}/extracted-scan</scanDirectory>

                                <scanIncludes>**/*</scanIncludes>

                                <!-- general exclude for containers; review constantly; minimize -->
                                <scanExcludes>
                                    <exclude>**/var/log/**/*</exclude>

                                    <exclude>**/sys/**/*</exclude>
                                    <exclude>**/proc/**/*</exclude>

                                    <exclude>**/dev/*</exclude>

                                    <exclude>**/run/utmp</exclude>

                                    <exlcude>**/var/lib/alternatives/*</exlcude>

                                    <exlcude>**/etc/**/*.bak</exlcude>
                                    <exlcude>**/etc/**/*.repo</exlcude>

                                    <exclude>**/usr/share/terminfo/**/*</exclude>
                                    <exclude>**/var/lib/dnf/history.sqlite-shm/**/*</exclude>
                                </scanExcludes>

                                <includeEmbedded>true</includeEmbedded>
                                <enableDetectComponentPatterns>true</enableDetectComponentPatterns>
                                <enableImplicitUnpack>true</enableImplicitUnpack>

                                <sourceInventoryDir>${project.build.directory}/inventory-base</sourceInventoryDir>
                                <sourceInventoryIncludes>inventory/*.xls</sourceInventoryIncludes>

                                <targetInventoryDir>${ae.extractor.target.dir}</targetInventoryDir>
                                <targetInventoryPath>${project.artifactId}-inventory.xlsx</targetInventoryPath>

                                <!-- configure validation during extraction -->
                                <failOnError>${ae.extractor.validation}</failOnError>
                                <failOnBanned>${ae.extractor.validation}</failOnBanned>
                                <failOnInternal>${ae.extractor.validation}</failOnInternal>
                                <failOnUnknownVersion>${ae.extractor.validation}</failOnUnknownVersion>
                                <failOnUnknown>${ae.extractor.validation}</failOnUnknown>
                                <failOnUpgrade>false</failOnUpgrade>
                                <failOnDowngrade>false</failOnDowngrade>
                                <failOnDevelopment>${ae.extractor.validation}</failOnDevelopment>
                                <failOnMissingLicense>${ae.extractor.validation}</failOnMissingLicense>
                                <failOnMissingLicenseFile>${ae.extractor.validation}</failOnMissingLicenseFile>
                                <failOnMissingNotice>${ae.extractor.validation}</failOnMissingNotice>

                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- FIXME: why is this required -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <executions>
                        <execution>
                            <id>default-jar</id>
                            <configuration>
                                <excludes>
                                    <exclude>--nothing--</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
